version: '3.8'
services:
  web:
    build:
      context: .
      args:
        BUILD_VARIANT: ${BUILD_VARIANT:-gpu}
    container_name: class_genius_web
    restart: unless-stopped
    privileged: true  # CRITICAL: Keep this for ctranslate2
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
      - ./segments:/app/segments
      - ./models:/app/models
      - ./workspace:/workspace
    environment:
      - REDIS_URL=redis://redis:6379/0
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility,graphics  # Added graphics for full GPU support
      - CUDA_VISIBLE_DEVICES=0
      - WHISPER_DEVICE=cuda
      - WHISPER_MODEL=large-v2
      - CELERY_LOGLEVEL=INFO
      - LOG_LEVEL=INFO
      - OCR_GPU=true  # Explicitly enable GPU for OCR
      - LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/lib/x86_64-linux-gnu:$$LD_LIBRARY_PATH  # Ensure library paths
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-net
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
        limits:
          memory: 32G
    runtime: nvidia  # Add this to ensure NVIDIA runtime is used
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  redis:
    image: "redis:7-alpine"
    container_name: class_genius_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --save 60 1
    volumes:
      - redis_data:/data
    networks:
      - app-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-net:
    driver: bridge

volumes:
  redis_data:
